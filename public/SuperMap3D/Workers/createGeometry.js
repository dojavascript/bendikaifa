define(["./defaultValue-2110bb17","./PrimitivePipeline-a6a9f70c","./createTaskProcessorWorker","./buildModuleUrl-b49ab279","./Cartesian3-c1138337","./Check-92c551fb","./Math-cd1437d9","./Cartographic-630e5de6","./Ellipsoid-ca2b8eb1","./FeatureDetection-e7fb956a","./defer-a21481c0","./PrimitiveType-3f9684f7","./Cartesian4-5c264813","./RuntimeError-6daf0e01","./WebGLConstants-92042d9e","./Rectangle-52f780a9","./Event-589349b0","./ComponentDatatype-3cfb1146","./GeometryAttribute-36384495","./GeometryAttributes-3cad3ff9","./GeometryPipeline-c4eb0d48","./AttributeCompression-79e23de9","./EncodedCartesian3-4c81d2ea","./IndexDatatype-d833345d","./IntersectionTests-c1fbbeaa","./Plane-32891d32","./WebMercatorProjection-c3d13a47"],(function(e,t,r,a,n,o,i,c,s,f,u,d,b,l,m,p,y,C,k,v,P,h,G,W,g,A,E){"use strict";var T={};function D(t){var r=T[t];return e.e(r)||("object"==typeof exports?T[r]=r=require("Workers/"+t):require(["Workers/"+t],(function(e){T[r=e]=e}))),r}return r((function(r,a){for(var n=r.subTasks,o=n.length,i=new Array(o),c=0;c<o;c++){var s=n[c],f=s.geometry,u=s.moduleName;if(e.e(u)){var d=D(u);i[c]=d(f,s.offset)}else i[c]=f}return Promise.all(i).then((function(e){return t.k.packCreateGeometryResults(e,a)}))}))}));
